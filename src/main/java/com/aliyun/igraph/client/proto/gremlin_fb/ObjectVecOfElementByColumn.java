// automatically generated by the FlatBuffers compiler, do not modify

package com.aliyun.igraph.client.proto.gremlin_fb;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * @author alibaba
 */
@SuppressWarnings("unused")
public final class ObjectVecOfElementByColumn extends Table {
  public static ObjectVecOfElementByColumn getRootAsObjectVecOfElementByColumn(ByteBuffer _bb) { return getRootAsObjectVecOfElementByColumn(_bb, new ObjectVecOfElementByColumn()); }
  public static ObjectVecOfElementByColumn getRootAsObjectVecOfElementByColumn(ByteBuffer _bb, ObjectVecOfElementByColumn obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public ObjectVecOfElementByColumn __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public long matchdocIndexVec(int j) { int o = __offset(4); return o != 0 ? (long)bb.getInt(__vector(o) + j * 4) & 0xFFFFFFFFL : 0; }
  public int matchdocIndexVecLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer matchdocIndexVecAsByteBuffer() { return __vector_as_bytebuffer(4, 4); }
  public long elementMetaIdVec(int j) { int o = __offset(6); return o != 0 ? bb.getLong(__vector(o) + j * 8) : 0; }
  public int elementMetaIdVecLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer elementMetaIdVecAsByteBuffer() { return __vector_as_bytebuffer(6, 8); }
  public long elementTypeVec(int j) { int o = __offset(8); return o != 0 ? (long)bb.getInt(__vector(o) + j * 4) & 0xFFFFFFFFL : 0; }
  public int elementTypeVecLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer elementTypeVecAsByteBuffer() { return __vector_as_bytebuffer(8, 4); }

  public static int createObjectVecOfElementByColumn(FlatBufferBuilder builder,
      int matchdoc_index_vecOffset,
      int element_meta_id_vecOffset,
      int element_type_vecOffset) {
    builder.startObject(3);
    ObjectVecOfElementByColumn.addElementTypeVec(builder, element_type_vecOffset);
    ObjectVecOfElementByColumn.addElementMetaIdVec(builder, element_meta_id_vecOffset);
    ObjectVecOfElementByColumn.addMatchdocIndexVec(builder, matchdoc_index_vecOffset);
    return ObjectVecOfElementByColumn.endObjectVecOfElementByColumn(builder);
  }

  public static void startObjectVecOfElementByColumn(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addMatchdocIndexVec(FlatBufferBuilder builder, int matchdocIndexVecOffset) { builder.addOffset(0, matchdocIndexVecOffset, 0); }
  public static int createMatchdocIndexVecVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt(data[i]); return builder.endVector(); }
  public static void startMatchdocIndexVecVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addElementMetaIdVec(FlatBufferBuilder builder, int elementMetaIdVecOffset) { builder.addOffset(1, elementMetaIdVecOffset, 0); }
  public static int createElementMetaIdVecVector(FlatBufferBuilder builder, long[] data) { builder.startVector(8, data.length, 8); for (int i = data.length - 1; i >= 0; i--) builder.addLong(data[i]); return builder.endVector(); }
  public static void startElementMetaIdVecVector(FlatBufferBuilder builder, int numElems) { builder.startVector(8, numElems, 8); }
  public static void addElementTypeVec(FlatBufferBuilder builder, int elementTypeVecOffset) { builder.addOffset(2, elementTypeVecOffset, 0); }
  public static int createElementTypeVecVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt(data[i]); return builder.endVector(); }
  public static void startElementTypeVecVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endObjectVecOfElementByColumn(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

